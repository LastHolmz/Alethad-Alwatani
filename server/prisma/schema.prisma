// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  fullName  String
  phone     Int        @unique
  password  String
  role      UserRole   @default(guest)
  status    UserStatus @default(denied)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Product {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  price         Int
  originalPrice Int?
  description   String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  barcode       String     @unique
  image         String
  categoryIDs   String[]   @db.ObjectId
  categories    Category[] @relation(fields: [categoryIDs], references: [id])
  brandIDs      String[]   @db.ObjectId
  brands        Brand[]    @relation(fields: [brandIDs], references: [id])
  skus          Sku[]      @relation()
}

model Category {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  Product    Product[] @relation(fields: [productIDs], references: [id])
  productIDs String[]  @db.ObjectId
  main       Boolean   @default(false)
  image      String?
  brandIds   String[]  @db.ObjectId
  brands     Brand[]   @relation(fields: [brandIds], references: [id])
}

model Brand {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  Product     Product[]  @relation(fields: [productIDs], references: [id])
  productIDs  String[]   @db.ObjectId
  image       String?
  categoryIDs String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIDs], references: [id])
}

model Sku {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  qty         Int      @default(0)
  hashedColor String?  @default("#000")
  nameOfColor String?  @default("بلا")
  size        String
  image       String?
  Product     Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   String?  @db.ObjectId
}

enum UserStatus {
  denied
  accepted
}

enum UserRole {
  user
  admin
  guest
}
